# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  lane :first_release do

  sync_code_signing(type: "appstore")

  produce(
      username: 'min.songkyung@gmail.com',
      app_identifier: 'kr.miin.Vinyler',
      app_name: 'Vinyler',
      language: 'Korean',
      app_version: '2.0')

  build_app(scheme: "Vinyler")

  deliver(
    submit_for_review: true,
    force: true,
    automatic_release: false,
    skip_binary_upload: false,
    metadata_path: "./metadata",
    app_version: "2.0",
    ignore_language_directory_validation: true,
    skip_metadata: true,
    skip_screenshots: true,
    skip_app_version_update: false,
    submission_information: {
      add_id_info_limits_tracking: true,
      add_id_info_serves_ads: true,
      add_id_info_tracks_action: true,
      add_id_info_tracks_install: true,
      add_id_info_uses_idfa: true,
      content_rights_has_rights: true,
      content_rights_contains_third_party_content: true,
      export_compliance_platform: 'ios',
      export_compliance_compliance_required: false,
      export_compliance_encryption_updated: false,
      export_compliance_app_type: nil,
      export_compliance_uses_encryption: false,
      export_compliance_is_exempt: false,
      export_compliance_contains_third_party_cryptography: false,
      export_compliance_contains_proprietary_cryptography: false, 
      export_compliance_available_on_french_store: false 
    }
)


end



 lane :update do
  get_certificates
  get_provisioning_profile
  build_app(workspace: "Vinyler.xcworkspace", scheme: "Vinyler")
  upload_to_app_store(skip_metadata: true, skip_screenshots: true)

  deliver(
   # 메타데이터와 빌드파일을 업로드 후 자동으로 제출 유무
   submit_for_review: true,
   force: true,
   # 자동으로 출시 여부에 대한 옵션
   automatic_release: false,

   # 만약 메타 데이터만 itunesConnect에 업로드하고싶다면, 아래의 옵션을 true로 두어 .ipa 파일이 업로드 되지 않도록 합니다.
   skip_binary_upload: false,

   # 메타데이터의 filePath를 입력
   # metadata_path: "./metadata",
   # screenshots_path: "./screenshots",
   
   # skip_metadata: false,
   skip_screenshots: true,
   #include_bitcode: false,


# 심사 시, IDFA(애플 광고 식별자)에 대한 정보입니다.
  submission_information: {
    add_id_info_limits_tracking: true,
    add_id_info_serves_ads: true,
    add_id_info_tracks_action: true,
    add_id_info_tracks_install: true,
    add_id_info_uses_idfa: true,
    content_rights_has_rights: true,
    content_rights_contains_third_party_content: false,
    export_compliance_platform: 'ios',
    export_compliance_compliance_required: false,
    export_compliance_encryption_updated: false,
    export_compliance_app_type: nil,
    export_compliance_uses_encryption: false,
    export_compliance_is_exempt: false,
    export_compliance_contains_third_party_cryptography: false,
    export_compliance_contains_proprietary_cryptography: false,
   }
 )

#git
# increment_build_number
 build_number = get_build_number
 version = get_version_number
 commitVersion = "#{version}"

 # Make sure our directory is clean, except for changes Fastlane has made
 clean_build_artifacts

 commit_version_bump(
        message: "Version #{commitVersion}"
       )

    add_git_tag(
        grouping: "v#{version}",
        build_number: commitVersion
        )

    push_to_git_remote
 end

  lane :tests do
  run_tests(workspace: "Vinyler.xcworkspace",
            devices: ["iPhone 6s", "iPhone XS Max"]
          )
  end

lane :build_release do
  build_app(scheme: "Vinyler",
            workspace: "Vinyler.xcworkspace",
            include_bitcode: false)
end




end
